[
    {
      "type": "h3",
      "id": "node",
      "text": "Node"
    },
    {
      "type": "h4",
      "text": "Properties"
    },
    {
      "type": "table",
      "rows": [
        [
          {
            "type": "a",
            "text": "key"
          },
          {
            "type": "code",
            "text": "String"
          }
        ],
        [
          {
            "type": "a",
            "text": "nodes"
          },
          {
            "type": "code",
            "text": "Immutable.List"
          }
        ],
        [
          {
            "type": "a",
            "text": "object"
          },
          {
            "type": "code",
            "text": "String"
          }
        ]
      ]
    },
    {
      "type": "h4",
      "text": "Computed Properties"
    },
    {
      "type": "table",
      "rows": [
        [
          {
            "type": "a",
            "text": "text"
          },
          {
            "type": "code",
            "text": "String"
          }
        ]
      ]
    },
    {
      "type": "h4",
      "text": "Methods"
    },
    {
      "type": "table",
      "rows": [
        [
          {
            "type": "a",
            "text": "filterDescendants"
          },
          {
            "type": "code",
            "text": "filterDescendants(iterator: Function) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "findDescendant"
          },
          {
            "type": "code",
            "text": "findDescendant(iterator: Function) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getAncestors"
          },
          {
            "type": "code",
            "text": "getAncestors(path: List|Array) => List|Void getAncestors(key: String) => List|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getBlocks"
          },
          {
            "type": "code",
            "text": "getBlocks() => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getLeafBlocksAtRange"
          },
          {
            "type": "code",
            "text": "getLeafBlocksAtRange(range: Range) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getBlocksByType"
          },
          {
            "type": "code",
            "text": "getBlocksByType(type: String) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getChild"
          },
          {
            "type": "code",
            "text": "getChild(path: List|Array) => Node|Void getChild(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getClosest"
          },
          {
            "type": "code",
            "text": "getClosest(path: List|Array, match: Function) => Node|Void getClosest(key: String, match: Function) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getClosestBlock"
          },
          {
            "type": "code",
            "text": "getClosestBlock(path: List|Array) => Node|Void getClosestBlock(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getClosestInline"
          },
          {
            "type": "code",
            "text": "getClosestInline(path: List|Array) => Node|Void getClosestInline(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getClosestVoid"
          },
          {
            "type": "code",
            "text": "getClosestVoid(path: List|Array) => Node|Void getClosestVoid(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getCommonAncestor"
          },
          {
            "type": "code",
            "text": "getCommonAncestor(path: List|Array) => Number getCommonAncestor(key: String) => Number"
          }
        ],
        [
          {
            "type": "a",
            "text": "getDepth"
          },
          {
            "type": "code",
            "text": "getDepth(path: List|Array) => Number getDepth(key: String) => Number"
          }
        ],
        [
          {
            "type": "a",
            "text": "getDescendant"
          },
          {
            "type": "code",
            "text": "getDescendant(path: List|Array) => Node|Void getDescendant(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getFirstText"
          },
          {
            "type": "code",
            "text": "getFirstText() => Text|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getFragmentAtRange"
          },
          {
            "type": "code",
            "text": "getFragmentAtRange(range: Range) => Document"
          }
        ],
        [
          {
            "type": "a",
            "text": "getFurthest"
          },
          {
            "type": "code",
            "text": "getFurthest(path: List|Array, iterator: Function) => Node|Null getFurthest(key: String, iterator: Function) => Node|Null"
          }
        ],
        [
          {
            "type": "a",
            "text": "getFurthestAncestor"
          },
          {
            "type": "code",
            "text": "getFurthestAncestor(path: List|Array) => Node|Null getFurthestAncestor(key: String) => Node|Null"
          }
        ],
        [
          {
            "type": "a",
            "text": "getFurthestBlock"
          },
          {
            "type": "code",
            "text": "getFurthestBlock(path: List|Array) => Node|Null getFurthestBlock(key: String) => Node|Null"
          }
        ],
        [
          {
            "type": "a",
            "text": "getFurthestInline"
          },
          {
            "type": "code",
            "text": "getFurthestInline(path: List|Array) => Node|Null getFurthestInline(key: String) => Node|Null"
          }
        ],
        [
          {
            "type": "a",
            "text": "getFurthestOnlyChildAncestor"
          },
          {
            "type": "code",
            "text": "getFurthestOnlyChildAncestor(path: List|Array) => Node|Null getFurthestOnlyChildAncestor(key: String) => Node|Null"
          }
        ],
        [
          {
            "type": "a",
            "text": "getInlines"
          },
          {
            "type": "code",
            "text": "getInlines() => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getLeafInlinesAtRange"
          },
          {
            "type": "code",
            "text": "getLeafInlinesAtRange(range: Range) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getInlinesByType"
          },
          {
            "type": "code",
            "text": "getInlinesByType(type: string) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getLastText"
          },
          {
            "type": "code",
            "text": "getLastText() => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getMarks"
          },
          {
            "type": "code",
            "text": "getMarks(range: Range) => Set"
          }
        ],
        [
          {
            "type": "a",
            "text": "getMarksAtRange"
          },
          {
            "type": "code",
            "text": "getMarksAtRange(range: Range) => Set"
          }
        ],
        [
          {
            "type": "a",
            "text": "getMarksByType"
          },
          {
            "type": "code",
            "text": "getMarksByType(type: String) => Set"
          }
        ],
        [
          {
            "type": "a",
            "text": "getNextBlock"
          },
          {
            "type": "code",
            "text": "getNextBlock(path: List|Array) => Node|Void getNextBlock(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getNextNode"
          },
          {
            "type": "code",
            "text": "getNextNode(path: List|Array) => Node|Void getNextNode(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getNextSibling"
          },
          {
            "type": "code",
            "text": "getNextSibling(path: List|Array) => Node|Void getNextSibling(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getNextText"
          },
          {
            "type": "code",
            "text": "getNextText(path: List|Array) => Node|Void getNextText(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getNode"
          },
          {
            "type": "code",
            "text": "getNode(path: List|Array) => Node|Void getNode(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getNodesAtRange"
          },
          {
            "type": "code",
            "text": "getNodesAtRange(range: Range) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getOffset"
          },
          {
            "type": "code",
            "text": "getOffset(path: List|Array) => Number getOffset(key: String) => Number"
          }
        ],
        [
          {
            "type": "a",
            "text": "getParent"
          },
          {
            "type": "code",
            "text": "getParent(path: List|Array) => Node|Void getParent(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getPath"
          },
          {
            "type": "code",
            "text": "getPath(path: List|Array) => Node|Void getPath(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getPreviousBlock"
          },
          {
            "type": "code",
            "text": "getPreviousBlock(path: List|Array) => Node|Void getPreviousBlock(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getPreviousNode"
          },
          {
            "type": "code",
            "text": "getPreviousNode(path: List|Array) => Node|Void getPreviousNode(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getPreviousSibling"
          },
          {
            "type": "code",
            "text": "getPreviousSibling(path: List|Array) => Node|Void getPreviousSibling(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getPreviousText"
          },
          {
            "type": "code",
            "text": "getPreviousText(path: List|Array) => Node|Void getPreviousText(key: String) => Node|Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getRootBlocksAtRange"
          },
          {
            "type": "code",
            "text": "getRootBlocksAtRange(range: Range) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getRootInlinesAtRange"
          },
          {
            "type": "code",
            "text": "getRootInlinesAtRange(range: Range) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getTextAtOffset"
          },
          {
            "type": "code",
            "text": "getTextAtOffset(offset: Number) => Text || Void"
          }
        ],
        [
          {
            "type": "a",
            "text": "getTextDirection"
          },
          {
            "type": "code",
            "text": "getTextDirection() => String"
          }
        ],
        [
          {
            "type": "a",
            "text": "getTexts"
          },
          {
            "type": "code",
            "text": "getTexts(range: Range) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "getTextsAtRange"
          },
          {
            "type": "code",
            "text": "getTextsAtRange(range: Range) => List"
          }
        ],
        [
          {
            "type": "a",
            "text": "hasChild"
          },
          {
            "type": "code",
            "text": "hasChild(path: List|Array) => Boolean hasChild(key: String) => Boolean"
          }
        ],
        [
          {
            "type": "a",
            "text": "hasDescendant"
          },
          {
            "type": "code",
            "text": "hasDescendant(path: List|Array) => Boolean hasDescendant(key: String) => Boolean"
          }
        ],
        [
          {
            "type": "a",
            "text": "hasNode"
          },
          {
            "type": "code",
            "text": "hasNode(path: List|Array) => Boolean hasNode(key: String) => Boolean"
          }
        ],
        [
          {
            "type": "a",
            "text": "isNodeInRange"
          },
          {
            "type": "code",
            "text": "isNodeInRange(path: List|Array, range: Range) => Boolean isNodeInRange(key: String, range: Range) => Boolean"
          }
        ]
      ]
    }
  ]